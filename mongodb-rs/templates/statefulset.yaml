apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "mongodb-rs.fullname" . }}
  labels:
    app: {{ template "mongodb-rs.name" . }}
    chart: {{ template "mongodb-rs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mongodb-rs.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "mongodb-rs.fullname" . }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "mongodb-rs.name" . }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.shutdownGracePeriod }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - mongod
          - "--bind_ip_all"
          - "--replSet"
          - {{ .Values.replicaSetName }}
          ports:
            - name: mongo
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          volumeMounts:
          - name: mongo-data
            mountPath: /data/db
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: managed-premium
      resources:
        requests:
          storage: 1Gi
